version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: mcp-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-mcp_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [mcp-network]

  github-mcp-service:
    image: ghcr.io/modelcontextprotocol/mcp-github:latest
    container_name: github-mcp-service
    environment:
      GITHUB_PERSONAL_ACCESS_TOKEN: ${GITHUB_PAT}
    ports:
      - "3011:3010"      # ← 可选
    networks: [mcp-network]

  mcp-server:
    build:
      context: ../
      dockerfile: deployment/Dockerfile
    container_name: mcp-server
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-mcp_db}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET:-default-secret}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-default-refresh-secret}
      MCP_MODE: http
      LOG_LEVEL: info
      USE_OFFICIAL_MCP_ADAPTER: true

      # --- MCP URLs ---
      GITHUB_MCP_SERVICE_URL: http://github-mcp-service:3010
      GITHUB_MCP_SERVICE_TOKEN: ${GITHUB_PAT}
    ports:
      - "3001:3001"
    volumes:
      - ../logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks: [mcp-network]

volumes:
  postgres_data:

networks:
  mcp-network:
    driver: bridge
    name: mcp-network
